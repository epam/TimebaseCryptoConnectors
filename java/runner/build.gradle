sourceSets {
    intTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    intTestImplementation.extendsFrom implementation
    intTestRuntimeOnly.extendsFrom runtimeOnly
}

dependencies {
    implementation project(':java:commons')
    implementation project(':java:connectors:binance-spot')
    implementation project(':java:connectors:binance-futures')
    implementation project(':java:connectors:bitfinex')
    implementation project(':java:connectors:bitmart')
    implementation project(':java:connectors:bitmex')
    implementation project(':java:connectors:bitpanda')
    implementation project(':java:connectors:bybit-futures')
    implementation project(':java:connectors:bybit-spot')
    implementation project(':java:connectors:coinbase')
    implementation project(':java:connectors:coinflex')
    implementation project(':java:connectors:ascendex')
    implementation project(':java:connectors:cryptofacilities')
    implementation project(':java:connectors:ftx')
    implementation project(':java:connectors:hitbtc')
    implementation project(':java:connectors:huobi-futures')
    implementation project(':java:connectors:huobi-spot')
    implementation project(':java:connectors:kraken-futures')
    implementation project(':java:connectors:kraken-spot')
    implementation project(':java:connectors:okcoin')
    implementation project(':java:connectors:okex')
    implementation project(':java:connectors:poloniex')
    implementation project(':java:connectors:kucoin')
    implementation project(':java:connectors:deribit')

    implementation project(':java:connectors:uniswap')

    implementation 'javax.annotation:javax.annotation-api'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation 'org.reflections:reflections'


    intTestImplementation 'org.finos.timebase-ce:timebase-api'
    intTestImplementation 'org.finos.timebase-ce:timebase-client'
    intTestImplementation 'com.epam.deltix:timebase-collections'
    intTestImplementation 'com.epam.deltix:timebase-messages'
    intTestImplementation 'com.epam.deltix:orderbook-core'
    intTestImplementation 'com.epam.deltix:dfp'
    intTestImplementation 'com.epam.deltix:containers'
    intTestImplementation "org.testcontainers:testcontainers"
    intTestImplementation "org.testcontainers:junit-jupiter"
    intTestImplementation 'org.junit.jupiter:junit-jupiter-api'
    intTestImplementation(testFixtures(project(':java:commons')))

    intTestRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

ext {
    dockerImageName = 'timebase-crypto-connectors'
}

task prepareFilesForDocker(type: Copy) {
    group 'docker'
    dependsOn ':build'

    into ('/runner/lib') {
        // Runtime dependencies
        from configurations.runtimeClasspath
        // application
        from jar
    }
    into ('/runner') {
        // executables
        from "$rootDir/bin"
    }

    into ('/runner/config') {
        from "$projectDir/src/main/resources/application.yaml"
    }

    destinationDir project.file("$buildDir/docker")
}

task prepareFilesForIntTests(type: Copy) {
    into ('/config') {
        from "$projectDir/src/main/resources/application.yaml"
    }

    into ('/config') {
        from "$projectDir/src/intTest/resources/logback.xml"
    }

    destinationDir project.file("$buildDir/intTest")
}

task intTest(type: Test) {
    dependsOn(prepareFilesForDocker, prepareFilesForIntTests)
    useJUnitPlatform()
    testLogging {
        //showStandardStreams = true
        displayGranularity = -1
        exceptionFormat = 'full'
        events 'PASSED', 'SKIPPED', 'FAILED'
    }

    testClassesDirs = sourceSets.intTest.output.classesDirs
    classpath = sourceSets.intTest.runtimeClasspath
}
